# Chunk 13
fullModel <- lm(target ~ zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio + black + lstat + medv, data = na.omit(wtCrimes))
fit <- glm(step(fullModel, direction = "backward", trace = F))
stargazer(fit, header = FALSE)
# Chunk 14
dfVifFit <- setDT(as.data.frame(vif(fit)), keep.rownames = TRUE)[]
colnames(dfVifFit) <- c("variables", "VIF")
kable(dfVifFit, align = c("l", "c"))
# Chunk 15
subsetModel <- regsubsets(target ~ ., data = dfTr, nbest = 1)
summary <- summary(subsetModel)
kable(summary$outmat)
subsetModel <- lm(target ~ nox + age + rad + tax + ptratio + black + lstat + medv, data = dfTr)
subsetModel <- glm(subsetModel, family = binomial, data = dfTr)
stargazer(subsetModel, header = FALSE)
?regsubsets
# Chunk 2
library(pacman)
p_load(Hmisc, xlsx, xtable, knitr, scales, magrittr, tidyverse,
stringr, e1071, corrplot, knitcitations, bibtex, missForest, abc,
foreach, doParallel, stargazer, forecast, matrixStats, glmulti, leaps, data.table, highlight, car)
# Chunk 3
download.file("https://github.com/ChristopheHunt/DATA-621-Group-1/raw/master/Homework%203/Data%20Dictionary.xlsx?raw=true", destfile = "Data Dictionary HW3 - Group 1.xlsx", mode = 'wb')
daDict <- read.xlsx("Data Dictionary HW3 - Group 1.xlsx", sheetIndex = 1)
file.remove(dir(getwd(), pattern = "Data Dictionary HW3 - Group 1", full.names = TRUE))
# Chunk 4
setwd(file.path("C:","Users", "Christophe", "Documents", "GitHub", "DATA 621 - Group 1", "DATA-621-Group-1", "Homework 3"))
daDict <- read.xlsx("Data Dictionary.xlsx", sheetIndex = 1)
# Chunk 5
kable(daDict %>%
filter(VARIABLE.TYPE == "Predictor Variable") %>%
mutate(Abbreviation = VARIABLE.NAME, Definition = DEFINITION)  %>%
dplyr::select(Abbreviation, Definition),
align = c("c","l"))
# Chunk 6
library(matrixStats)
crimes <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%203/crime-training-data.csv")
dfSkew <- setDT(as.data.frame(abs(skewness(crimes))), keep.rownames = TRUE)[]
colnames(dfSkew) <- c("variables", "skew")
kable(dfSkew, align = c("l", "c"))
# Chunk 7
kable(data.frame(cbind(variables = colnames(crimes), sd = colSds(as.matrix(crimes)))), align = c("l", "c"))
# Chunk 8
dfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%203/crime-training-data.csv")
digits <- c(1)
descriptive <- describe( dfTr %>% dplyr::select(-target, -chas, -rad) # TODO figure out why rad has a wierd frequency table
, descript = "Table 1 : Descriptive Statistics", digits = digits)
latex(descriptive, file = '')
# Chunk 9
dfTr <- read.csv("crime-training-data.csv")
# Chunk 10
dfTrMx <- as.matrix(dfTr)
corMx <- cor(dfTrMx , use = "everything",  method = c("pearson"))
corrplot(corMx, order = "hclust", addrect = 2, method = "square", tl.col = "black", tl.cex = .5, na.label = " ")
# Chunk 11
winsorize <- function(x, multiple=2.2)
{
q <- quantile(x)
iqr <- IQR(x)
iqrAdjusted <- iqr*multiple
rangeLow <- q['25%']-iqrAdjusted
rangeHigh <- q['75%']+iqrAdjusted
x[x<rangeLow] <- min(x[x>rangeLow])
x[x>rangeHigh] <- max(x[x<rangeHigh])
return(x)
}
# Chunk 12
library(forecast)
winsorizedDataset <- function(dataset){
dataset <- dataset[,1:ncol(dataset)]
wdataset <- matrix(data = 0, nrow = nrow(dataset), ncol = ncol(dataset))
#l1 <- numeric(ncol(dataset))
for (i in 1:ncol(dataset)){
if(i == 3 || i == ncol(dataset)){
wdataset[,i] <- dataset[,i]
}
else {
wdataset[,i] <- winsorize(dataset[,i], multiple = 2.2)
#l1[i] <- BoxCox.lambda(wdataset[,i])
}
colnames(wdataset) <- colnames(dataset)
}
return(data.frame(wdataset))
}
#lambdas <- winsorizedandtransformed(crimes)[[2]]
#wtcrimes <- winsorizedandtransformed(crimes)[[1]]
wCrimes <- winsorizedDataset(crimes)
stargazer(wCrimes, header = FALSE)
crimes <- dfTr
# Chunk 2
library(pacman)
p_load(Hmisc, xlsx, xtable, knitr, scales, magrittr, tidyverse,
stringr, e1071, corrplot, knitcitations, bibtex, missForest, abc,
foreach, doParallel, stargazer, forecast, matrixStats, glmulti, leaps, data.table, highlight, car)
# Chunk 3
download.file("https://github.com/ChristopheHunt/DATA-621-Group-1/raw/master/Homework%203/Data%20Dictionary.xlsx?raw=true", destfile = "Data Dictionary HW3 - Group 1.xlsx", mode = 'wb')
daDict <- read.xlsx("Data Dictionary HW3 - Group 1.xlsx", sheetIndex = 1)
file.remove(dir(getwd(), pattern = "Data Dictionary HW3 - Group 1", full.names = TRUE))
# Chunk 4
setwd(file.path("C:","Users", "Christophe", "Documents", "GitHub", "DATA 621 - Group 1", "DATA-621-Group-1", "Homework 3"))
daDict <- read.xlsx("Data Dictionary.xlsx", sheetIndex = 1)
# Chunk 5
kable(daDict %>%
filter(VARIABLE.TYPE == "Predictor Variable") %>%
mutate(Abbreviation = VARIABLE.NAME, Definition = DEFINITION)  %>%
dplyr::select(Abbreviation, Definition),
align = c("c","l"))
# Chunk 6
library(matrixStats)
crimes <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%203/crime-training-data.csv")
dfSkew <- setDT(as.data.frame(abs(skewness(crimes))), keep.rownames = TRUE)[]
colnames(dfSkew) <- c("variables", "skew")
kable(dfSkew, align = c("l", "c"))
# Chunk 7
kable(data.frame(cbind(variables = colnames(crimes), sd = colSds(as.matrix(crimes)))), align = c("l", "c"))
# Chunk 8
dfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%203/crime-training-data.csv")
digits <- c(1)
descriptive <- describe( dfTr %>% dplyr::select(-target, -chas, -rad) # TODO figure out why rad has a wierd frequency table
, descript = "Table 1 : Descriptive Statistics", digits = digits)
latex(descriptive, file = '')
# Chunk 9
crimes <- dfTr
# Chunk 10
dfTrMx <- as.matrix(dfTr)
corMx <- cor(dfTrMx , use = "everything",  method = c("pearson"))
corrplot(corMx, order = "hclust", addrect = 2, method = "square", tl.col = "black", tl.cex = .5, na.label = " ")
# Chunk 11
winsorize <- function(x, multiple=2.2)
{
q <- quantile(x)
iqr <- IQR(x)
iqrAdjusted <- iqr*multiple
rangeLow <- q['25%']-iqrAdjusted
rangeHigh <- q['75%']+iqrAdjusted
x[x<rangeLow] <- min(x[x>rangeLow])
x[x>rangeHigh] <- max(x[x<rangeHigh])
return(x)
}
# Chunk 12
library(forecast)
winsorizedDataset <- function(dataset){
dataset <- dataset[,1:ncol(dataset)]
wdataset <- matrix(data = 0, nrow = nrow(dataset), ncol = ncol(dataset))
#l1 <- numeric(ncol(dataset))
for (i in 1:ncol(dataset)){
if(i == 3 || i == ncol(dataset)){
wdataset[,i] <- dataset[,i]
}
else {
wdataset[,i] <- winsorize(dataset[,i], multiple = 2.2)
#l1[i] <- BoxCox.lambda(wdataset[,i])
}
colnames(wdataset) <- colnames(dataset)
}
return(data.frame(wdataset))
}
#lambdas <- winsorizedandtransformed(crimes)[[2]]
#wtcrimes <- winsorizedandtransformed(crimes)[[1]]
wCrimes <- winsorizedDataset(crimes)
stargazer(wCrimes, header = FALSE)
boxcoxLambdas <- function(dataset){
dataset <- dataset[,1:ncol(dataset)]
#tdataset <- matrix(data = 0, nrow = nrow(dataset), ncol = ncol(dataset))
l1 <- numeric(ncol(dataset))
for (i in 1:ncol(dataset)){
l1[i] <- BoxCox.lambda(dataset[,i])
}
return(data.frame(l1, colnames(dataset)))
}
boxcoxLambdas(wCrimes)
shiny::runApp('~/GitHub/MSDA - Coursework/Data 608/HW3/CHunt_Homework_3')
??shiny
dfDisease <- read.csv("cdc-mortality-1999-2010.csv")
setwd(file.path("C:", "Users", "Christophe", "Documents", "GitHub", "MSDA - Coursework", "Data 608", "HW3"))
dfDisease <- read.csv("cdc-mortality-1999-2010.csv")
plot(dfDisease)
library(tidyverse)
dfMort <- read.csv("cdc-mortality-1999-2010.csv")
dfMortSub <- dfMort %>%
filter(Year == 2010)
View(dfMort)
dfMortSub <- dfMort %>%
filter(Year == "2010")
dfMort <- read.csv("cdc-mortality-1999-2010.csv")
dfMortSub <- dfMort %>%
filter(Year != 2010)
dfMortSub <- dfMort %>%
filter(Year.Code == 2010)
library(shiny)
library(tidyverse)
setwd(file.path("C:", "Users", "Christophe", "Documents", "GitHub", "MSDA - Coursework", "Data 608", "HW3"))
dfMort <- read.csv("cdc-mortality-1999-2010.csv")
dfMortSub <- dfMort %>%
filter(Year.Code == 2010)
library(plotly)
dfMortSub <- dfMort %>%
filter(Year.Code == 2010) %>%
arrange(Crude.Rate)
View(dfMortSub)
??plotly-`plotly-shiny`
?`plotly-shiny`
ggplot(data = dfMortSub, aes(y = State, x = Crude.Rate)) +
geom_bar()
ggplot(data = dfMortSub, aes(y = Crude.Rate, x = State)) +
geom_bar() +
coord_flip()
ggplot(data = dfMortSub, aes(y = Crude.Rate, x = State)) +
geom_bar(stat = "identity") +
coord_flip()
dfMortSub <- dfMort %>%
filter(Year.Code == 2010 & ICD.Chapter %in% test) %>%
arrange(-Crude.Rate)
test <- c("Certain infectious and parasitic diseases")
dfMortSub <- dfMort %>%
filter(Year.Code == 2010 & ICD.Chapter %in% test) %>%
arrange(-Crude.Rate)
?map_if
?foreach
library(foreach)
dfMort <- read.csv("cdc-mortality-1999-2010.csv") %>%
select(State, ICD.Chapter, Crude.Rate )
dfMort <- read.csv("cdc-mortality-1999-2010.csv") %>%
filter(Year.Code == 2010) %>%
select(State, ICD.Chapter, Crude.Rate )
dfMort <- read.csv("cdc-mortality-1999-2010.csv") %>%
filter(Year.Code == 2010) %>%
select(State, ICD.Chapter, Crude.Rate)
dfMortSub <- dfMort %>%
filter(Year.Code == 2010 & ICD.Chapter %in% test) %>%
arrange(-Crude.Rate)
dfMortSub <- dfMort %>%
filter(ICD.Chapter %in% test) %>%
arrange(-Crude.Rate)
??filter factor
dfMortSub <- dfMort %>%
mutate(Crude.Rate = as.numeric(Crude.Rate))
filter(ICD.Chapter %in% test) %>%
arrange(-Crude.Rate)
dfMortSub <- dfMort %>%
mutate(Crude.Rate = gsub("(Unreliable)", Crude.Rate))
filter(ICD.Chapter %in% test) %>%
arrange(-Crude.Rate)
dfMortSub <- dfMort %>%
mutate(Crude.Rate = gsub("(Unreliable)", Crude.Rate)) %>%
dfMortSub <- dfMort %>%
mutate(Crude.Rate = gsub("(Unreliable)", Crude.Rate))
dfMortSub <- dfMort %>%
mutate(Crude.Rate = gsub("(Unreliable)", "", Crude.Rate))
View(dfMortSub)
dfMortSub <- dfMort %>%
mutate(Crude.Rate =
gsub("()","", gsub("(Unreliable)", "", Crude.Rate))) %>%
filter(ICD.Chapter %in% test) %>%
arrange(-Crude.Rate)
dfMortSub <- dfMort %>%
mutate(Crude.Rate =
gsub("()","", gsub("(Unreliable)", "", Crude.Rate)))
View(dfMortSub)
dfMortSub <- dfMort %>%
mutate(Crude.Rate =
gsub("()","", gsub("(Unreliable)", "", Crude.Rate)))[643]
dfMort %>%
mutate(Crude.Rate =
gsub("()","", gsub("(Unreliable)", "", Crude.Rate)))[643]
dfMortSub[,648]
dfMortSub[648,]
dfMortSub[665,]
dfMortSub[624,]
dfMort <- read.csv("cdc-mortality-1999-2010.csv") %>%
filter(Year.Code == 2010) %>%
select(State, ICD.Chapter, Crude.Rate) %>%
mutate(Crude.Rate = gsub("()","", gsub("(Unreliable)", "", Crude.Rate)))
View(dfMort)
dfMort <- read.csv("cdc-mortality-1999-2010.csv") %>%
filter(Year.Code == 2010) %>%
select(State, ICD.Chapter, Crude.Rate) %>%
mutate(Crude.Rate = gsub(" ()","", gsub("(Unreliable)", "", Crude.Rate)))
View(dfMort)
x <- dfMort[624,]
x
x[3,]
x[,3]
dfMort <- read.csv("cdc-mortality-1999-2010.csv") %>%
filter(Year.Code == 2010) %>%
select(State, ICD.Chapter, Crude.Rate) %>%
mutate(Crude.Rate = gsub("()","", gsub("(Unreliable)", "", Crude.Rate)))
View(dfMort)
dfMort <- read.csv("cdc-mortality-1999-2010.csv") %>%
filter(Year.Code == 2010) %>%
select(State, ICD.Chapter, Crude.Rate) %>%
mutate(Crude.Rate = gsub("//(Unreliable)", "", Crude.Rate)))
gsub("//[]+", "", dfMort$Crude.Rate)
gsub("//.+", "", dfMort$Crude.Rate)
dfMort$Crude.Rate
dfMort <- read.csv("cdc-mortality-1999-2010.csv")
gsub("//.+", "", dfMort$Crude.Rate)
gsub("//s.+", "", dfMort$Crude.Rate)
gsub("//[space].+", "", dfMort$Crude.Rate)
gsub("//[:space:]", "", dfMort$Crude.Rate)
gsub("^//(.", "", dfMort$Crude.Rate)
gsub("^/(.", "", dfMort$Crude.Rate)
?regex
gsub("^[:space:].+", "", as.character(dfMort$Crude.Rate)()
)
gsub("^[:space:].+", "", as.character(dfMort$Crude.Rate))
gsub("[:space:].+", "", as.character(dfMort$Crude.Rate))
gsub("[:space:]*", "", as.character(dfMort$Crude.Rate))
gsub("+[:space:]*", "", as.character(dfMort$Crude.Rate))
gsub(" (Unrlibl)", "", gsub("+[:space:]*", "", as.character(dfMort$Crude.Rate)))
gsub("(Unrlibl)", "", gsub("+[:space:]*", "", as.character(dfMort$Crude.Rate)))
gsub("(Unrlibl)", "", gsub("+[:space:]*", "", as.character(dfMort$Crude.Rate[,8047])))
gsub("(Unrlibl)", "", gsub("+[:space:]*", "", as.character(dfMort[,8047]$Crude.Rate)))
gsub("(Unrlibl)", "", gsub("+[:space:]*", "", as.character(dfMort[8047,]$Crude.Rate)))
gsub("()", "", gsub("+[:space:]*", "", as.character(dfMort[8047,]$Crude.Rate)))
gsub("*/s", "", gsub("+[:space:]*", "", as.character(dfMort[8047,]$Crude.Rate)))
gsub("+/s", "", gsub("+[:space:]*", "", as.character(dfMort[8047,]$Crude.Rate)))
gsub("+[:space:]*", "", gsub("+[:space:]*", "", as.character(dfMort[8047,]$Crude.Rate)))
gsub("+?[:space:]*", "", as.character(dfMort[8047,]$Crude.Rate))
gsub("?+[:space:]*", "", as.character(dfMort[8047,]$Crude.Rate))
gsub("+.[:space:]*", "", as.character(dfMort[8047,]$Crude.Rate))
gsub("[:space:].+*", "", as.character(dfMort[8047,]$Crude.Rate))
gsub("[:space:].*", "", as.character(dfMort[8047,]$Crude.Rate))
?uft
??uft
gsub("[:space:].*", "", enc2utf8(dfMort[8047,]$Crude.Rate)))
enc2utf8(dfMort[8047,]$Crude.Rate)
enc2utf8(as.character(dfMort[8047,]$Crude.Rate))
gsub("[:space:].*", "", enc2utf8(as.character(dfMort[8047,]$Crude.Rate))))
gsub("[:space:].*", "", enc2utf8(as.character(dfMort[8047,]$Crude.Rate)))
enc2native(as.character(dfMort[8047,]$Crude.Rate))
enc2native(as.character(dfMort[8047,]$Crude.Rate))
gsub("^[:space:].*", "", enc2utf8(as.character(dfMort[8047,]$Crude.Rate)))
gsub("/[:space:].*", "", enc2utf8(as.character(dfMort[8047,]$Crude.Rate)))
gsub("//[:space:].*", "", enc2utf8(as.character(dfMort[8047,]$Crude.Rate)))
??regexp
?regexp
gsub("[:alnum:].+[:space:].*", "", enc2utf8(as.character(dfMort[8047,]$Crude.Rate)))
gsub("[:alnum:].[:space:].*", "", enc2utf8(as.character(dfMort[8047,]$Crude.Rate)))
gsub("[:alnum:].8[:space:].*", "", enc2utf8(as.character(dfMort[8047,]$Crude.Rate)))
gsub("[:alnum:].*[:space:].*", "", enc2utf8(as.character(dfMort[8047,]$Crude.Rate)))
gsub("[:alnum:].*", "", enc2utf8(as.character(dfMort[8047,]$Crude.Rate)))
gsub("[:alnum:].*[_]", "", enc2utf8(as.character(dfMort[8047,]$Crude.Rate)))
gsub("[:alnum:].*["_"]", "", enc2utf8(as.character(dfMort[8047,]$Crude.Rate)))
gsub("[:alnum:].*[]", "", enc2utf8(as.character(dfMort[8047,]$Crude.Rate)))
gsub("[:alnum:].*", "", enc2utf8(as.character(dfMort[8047,]$Crude.Rate)))
gsub("[:alnum:]./s*", "", enc2utf8(as.character(dfMort[8047,]$Crude.Rate)))
gsub("[:alnum:].//s*", "", enc2utf8(as.character(dfMort[8047,]$Crude.Rate)))
gsub("[:alnum:].//(*", "", enc2utf8(as.character(dfMort[8047,]$Crude.Rate)))
gsub("[:alnum:].//[(]*", "", enc2utf8(as.character(dfMort[8047,]$Crude.Rate)))
gsub("[:alnum:].[(]*", "", enc2utf8(as.character(dfMort[8047,]$Crude.Rate)))
dfMort <- read.csv("cdc-mortality-1999-2010.csv") %>%
filter(Year.Code == 2010)
dfMort <- read.csv("cdc-mortality-1999-2010.csv") %>%
filter(Year.Code == 2010) %>%
mutate(Crude.Rate = round(((Deaths/Population)*100000),1)
dfMort <- read.csv("cdc-mortality-1999-2010.csv") %>%
filter(Year.Code == 2010) %>%
mutate(Crude.Rate = round(((Deaths/Population)*100000),1))
dfMort <- read.csv("cdc-mortality-1999-2010.csv") %>%
filter(Year.Code == 2010) %>%
mutate(Crude.Rate = round(((Deaths/Population)*100000),1))
dfMort <- read.csv("cdc-mortality-1999-2010.csv") %>%
filter(Year.Code == 2010) %>%
mutate(Crude.Rate = round(((Deaths/Population)*100000),1)) %>%
select(State, ICD.Chapter, Crude.Rate) %>%
test <- c("Certain infectious and parasitic diseases")
dfMort <- read.csv("cdc-mortality-1999-2010.csv") %>%
filter(Year.Code == 2010) %>%
mutate(Crude.Rate = round(((Deaths/Population)*100000),1)) %>%
select(State, ICD.Chapter, Crude.Rate)
test <- c("Certain infectious and parasitic diseases")
dfMortSub <- dfMort %>%
filter(ICD.Chapter %in% test) %>%
arrange(-Crude.Rate)
View(dfMortSub)
ShinyItemAnalysis::startShinyItemAnalysis()
?shiny
`shiny-options`
?`shiny-options`
?shinyUI
checkboxInput()
?checkboxInput
runApp('CHunt_Homework_3')
unique(dfMort$ICD.Chapter)
unique(as.characters(dfMort$ICD.Chapter)
)
unique(as.character(dfMort$ICD.Chapter))
runApp('CHunt_Homework_3')
runApp('CHunt_Homework_3')
runApp('CHunt_Homework_3')
runApp('CHunt_Homework_3')
dfMortSub <- dfMort %>%
filter(ICD.Chapter %in% input$) %>%
arrange(-Crude.Rate)
ggplot(data = dfMortSub, aes(y = Crude.Rate, x = State)) +
geom_bar(stat = "identity") +
coord_flip()
dfMort <- read.csv("cdc-mortality-1999-2010.csv") %>%
filter(Year.Code == 2010) %>%
mutate(Crude.Rate = round(((Deaths/Population)*100000),1)) %>%
select(State, ICD.Chapter, Crude.Rate)
library(shiny)
library(tidyverse)
library(plotly)
library(purr)
setwd(file.path("C:", "Users", "Christophe", "Documents", "GitHub", "MSDA - Coursework", "Data 608", "HW3"))
dfMort <- read.csv("cdc-mortality-1999-2010.csv") %>%
filter(Year.Code == 2010) %>%
mutate(Crude.Rate = round(((Deaths/Population)*100000),1)) %>%
select(State, ICD.Chapter, Crude.Rate)
dfMortSub <- dfMort %>%
filter(ICD.Chapter %in% input$) %>%
arrange(-Crude.Rate)
ggplot(data = dfMortSub, aes(y = Crude.Rate, x = State)) +
geom_bar(stat = "identity") +
coord_flip()
dfMortSub <- dfMort %>%
#filter(ICD.Chapter %in% input$) %>%
arrange(-Crude.Rate)
ggplot(data = dfMortSub, aes(y = Crude.Rate, x = State)) +
geom_bar(stat = "identity") +
coord_flip()
runApp('CHunt_Homework_3')
runApp('CHunt_Homework_3')
?lvls_reorder
library(forcats)
?lvls_reorder
?order_by
dfMortSub$State <- lvls_reorder(dfMortSub$State, dfMortSub$State )
dfMortSub$State <- lvls_reorder(dfMortSub$State, seq(1:nrow(dfMortSub)) )
dfMortSub$State <- lvls_reorder(unique(dfMortSub$State), seq(1:nrow(dfMortSub)) )
seq(0:nrow(dfMortSub))
dfMortSub$State <- lvls_reorder(unique(dfMortSub$State), seq(1:length(unique(dfMortSub$State))) )
seq(1:length(unique(dfMortSub$State)))
unique(dfMortSub$State)
seq(0:length(unique(dfMortSub$State)))
dfMortSub$State <- lvls_reorder(unique(dfMortSub$State), seq(0:length(unique(dfMortSub$State))) )
dfMortSub <- dfMort %>%
filter(ICD.Chapter %in% input$conditions) %>%
group_by(State) %>%
summarise(Crude.Rate = sum(Crude.Rate)) %>%
arrange(-Crude.Rate) %>%
000000
dfMortSub <- dfMort %>%
#filter(ICD.Chapter %in% input$conditions) %>%
group_by(State) %>%
summarise(Crude.Rate = sum(Crude.Rate)) %>%
arrange(-Crude.Rate)
View(dfMortSub)
dfMortSub$State <- lvls_reorder(unique(dfMortSub$State), seq(0:length(unique(dfMortSub$State))) )
View(dfMortSub)
ggplot(data = dfMortSub, aes(y = Crude.Rate, x = State)) +
geom_bar(stat = "identity") +
coord_flip()
dfMortSub <- dfMort %>%
#filter(ICD.Chapter %in% input$conditions) %>%
group_by(State) %>%
summarise(Crude.Rate = sum(Crude.Rate)) %>%
arrange(-Crude.Rate)
dfMortSub$State <- lvls_reorder(unique(dfMortSub$State), seq(0:length(unique(dfMortSub$State))) )
ggplot(data = dfMortSub, aes(y = Crude.Rate, x = State)) +
geom_bar(stat = "identity") +
coord_flip()
dfMortSub <- dfMort %>%
#filter(ICD.Chapter %in% input$conditions) %>%
group_by(State) %>%
summarise(Crude.Rate = sum(Crude.Rate)) %>%
arrange(-Crude.Rate) %>%
mutate(State = factor(State,State))
#  dfMortSub$State <- lvls_reorder(unique(dfMortSub$State), seq(0:length(unique(dfMortSub$State))) )
ggplot(data = dfMortSub, aes(y = Crude.Rate, x = State)) +
geom_bar(stat = "identity") +
coord_flip()
dfMortSub <- dfMort %>%
#filter(ICD.Chapter %in% input$conditions) %>%
group_by(State) %>%
summarise(Crude.Rate = sum(Crude.Rate)) %>%
arrange(Crude.Rate) %>%
mutate(State = factor(State,State))
#  dfMortSub$State <- lvls_reorder(unique(dfMortSub$State), seq(0:length(unique(dfMortSub$State))) )
ggplot(data = dfMortSub, aes(y = Crude.Rate, x = State)) +
geom_bar(stat = "identity") +
coord_flip()
runApp('CHunt_Homework_3')
runApp('CHunt_Homework_3')
runApp('CHunt_Homework_3')
runApp('CHunt_Homework_3')
runApp('CHunt_Homework_3')
runApp('CHunt_Homework_3')
dfMortSub <- dfMort %>%
# filter(ICD.Chapter %in% input$conditions) %>%
group_by(State) %>%
summarise(Crude.Rate = sum(Crude.Rate)) %>%
arrange(Crude.Rate) %>%
mutate(State = factor(State,State))
ggplot(data = dfMortSub, aes(y = Crude.Rate, x = State)) +
geom_bar(stat = "identity") +
ylab("Rate (per 100000 people)") +
coord_flip() +
theme_minimal()
runApp('CHunt_Homework_3')
runApp('CHunt_Homework_3')
runApp('CHunt_Homework_3')
runApp('CHunt_Homework_3')
runApp('CHunt_Homework_3')
runApp('CHunt_Homework_3')
runApp('CHunt_Homework_3')
runApp('CHunt_Homework_3')
runApp('CHunt_Homework_3')
runApp('CHunt_Homework_3')
runApp('CHunt_Homework_3')
